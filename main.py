import feedparser
import requests
from bs4 import BeautifulSoup
from telegram import Bot, InlineKeyboardButton, InlineKeyboardMarkup
from config import TELEGRAM_TOKEN, TELEGRAM_CHANNEL_ID
import asyncio

bot = Bot(token=TELEGRAM_TOKEN)


# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—å–∏
async def fetch_full_article(url):
    try:
        response = requests.get(url, timeout=10)
        soup = BeautifulSoup(response.text, "html.parser")

        article_text = ""
        article = soup.find("article")

        if article:
            paragraphs = article.find_all("p")
            for paragraph in paragraphs:
                article_text += paragraph.get_text() + "\n"
        else:
            article_text = soup.get_text()

        return article_text.strip()
    except Exception as e:
        print(f"Error fetching full article: {e}")
    return None


# –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å—Ç–∞—Ç—å–µ
async def fetch_image(link):
    try:
        response = requests.get(link, timeout=10)
        soup = BeautifulSoup(response.text, "html.parser")

        # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º <meta property="og:image">
        og_image = soup.find("meta", property="og:image")
        if og_image and og_image.get("content"):
            return og_image["content"]

        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = soup.find("img")
        if img and img.get("src"):
            return img["src"]

    except Exception as e:
        print(f"Error fetching image: {e}")
    return None


# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ RSS
# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ RSS
async def fetch_rss_news(url):
    feed = feedparser.parse(url)
    news = []
    for entry in feed.entries[:5]:
        summary = getattr(entry, "summary", "") or getattr(entry, "description", "")
        news.append(
            {
                "title": entry.title,
                "link": entry.link,
                "summary": summary,
            }
        )
    return news


# –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
async def post_news():
    rss_feeds = [
        "https://rssexport.rbc.ru/rbcnews/news/stream.rss",  # –†–ë–ö
        "https://ria.ru/export/rss2/index.xml",  # –†–ò–ê –ù–æ–≤–æ—Å—Ç–∏
        "https://tass.ru/rss/v2.xml",  # –¢–ê–°–°
        "https://www.vedomosti.ru/rss/news",  # –í–µ–¥–æ–º–æ—Å—Ç–∏
        "https://www.kommersant.ru/RSS/news",  # –ö–æ–º–º–µ—Ä—Å–∞–Ω—Ç—ä
    ]

    for rss_url in rss_feeds:
        print(f"Fetching news from: {rss_url}")
        news_items = await fetch_rss_news(rss_url)

        for item in news_items:
            print(f"Processing news item: {item['title']}")
            full_article = await fetch_full_article(item["link"])
            image_url = await fetch_image(item["link"])

            if full_article:
                text = f"üì∞ <b>{item['title']}</b>\n\n{full_article}"
            else:
                text = f"üì∞ <b>{item['title']}</b>\n\n{item['summary']}"

            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            comment_button = InlineKeyboardButton(
                "–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", url=f"{item['link']}#comments"
            )
            keyboard = InlineKeyboardMarkup([[comment_button]])

            try:
                if image_url:
                    # –°–Ω–∞—á–∞–ª–∞ —Ñ–æ—Ç–æ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
                    await bot.send_photo(
                        chat_id=TELEGRAM_CHANNEL_ID,
                        photo=image_url,
                        reply_markup=keyboard,
                    )
                    # –ü–æ—Ç–æ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç
                    await bot.send_message(
                        chat_id=TELEGRAM_CHANNEL_ID,
                        text=text[:4096],
                        parse_mode="HTML",
                        reply_markup=keyboard,
                    )
                else:
                    # –ë–µ–∑ —Ñ–æ—Ç–æ ‚Äî –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
                    await bot.send_message(
                        chat_id=TELEGRAM_CHANNEL_ID,
                        text=text[:4096],
                        parse_mode="HTML",
                        reply_markup=keyboard,
                    )
                print(f"Sent news: {item['title']}")
            except Exception as e:
                print(f"Error sending news: {e}")


# –ó–∞–ø—É—Å–∫
async def main():
    await post_news()


if __name__ == "__main__":
    asyncio.run(main())
